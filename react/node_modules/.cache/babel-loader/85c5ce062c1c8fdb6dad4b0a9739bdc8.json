{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrawerda/Desktop/fiszki-dla-niemych-2/react/src/assets/quiz/Answers.js\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport Icon from \"../images/icons/04.svg\";\nimport StatItem from \"../components/Stats/StatItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Items = [{\n  id: 1,\n  icon: Icon,\n  title: \"Gotowe fiszki do nauki\"\n}, {\n  id: 2,\n  icon: Icon,\n  title: \"Tworzenie własnych fiszek\"\n}, {\n  id: 3,\n  icon: Icon,\n  title: \"Platformę edukacyjną\"\n}, {\n  id: 4,\n  icon: Icon,\n  title: \"Quizy oraz ranking\"\n}];\nconst Counts = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  margin-top: 2rem;\n  gap: 1rem;\n  flex: 1;\n`;\n_c = Counts;\n\nclass Answers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAnswered: false,\n      classNames: [\"\", \"\", \"\", \"\"]\n    };\n    this.checkAnswer = this.checkAnswer.bind(this);\n  }\n\n  checkAnswer(e) {\n    let {\n      isAnswered\n    } = this.props;\n\n    if (!isAnswered) {\n      let elem = e.currentTarget;\n      let {\n        correct,\n        increaseScore\n      } = this.props;\n      let answer = Number(elem.dataset.id);\n      let updatedClassNames = this.state.classNames;\n\n      if (answer === correct) {\n        updatedClassNames[answer - 1] = 'right';\n        increaseScore();\n      } else {\n        updatedClassNames[answer - 1] = 'wrong';\n      }\n\n      this.setState({\n        classNames: updatedClassNames\n      });\n      this.props.showButton();\n    }\n  }\n\n  render() {\n    let {\n      answers\n    } = this.props;\n    let {\n      classNames\n    } = this.state;\n    let transition = {\n      transitionName: \"example\",\n      transitionEnterTimeout: 500,\n      transitionLeaveTimeout: 300\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"answers\",\n      children: [/*#__PURE__*/_jsxDEV(Counts, {\n        children: Items.map(item => {\n          return /*#__PURE__*/_jsxDEV(StatItem, {\n            item: item\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: this.checkAnswer,\n          className: classNames[0],\n          \"data-id\": \"1\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 90\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: answers[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 105\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: this.checkAnswer,\n          className: classNames[1],\n          \"data-id\": \"2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 90\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: answers[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 105\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: this.checkAnswer,\n          className: classNames[2],\n          \"data-id\": \"3\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 90\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: answers[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 105\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: this.checkAnswer,\n          className: classNames[3],\n          \"data-id\": \"4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 90\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: answers[3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 105\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Answers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counts\");","map":{"version":3,"sources":["/Users/aleksandrawerda/Desktop/fiszki-dla-niemych-2/react/src/assets/quiz/Answers.js"],"names":["React","styled","StatItem","Items","id","icon","Icon","title","Counts","div","Answers","Component","constructor","props","state","isAnswered","classNames","checkAnswer","bind","e","elem","currentTarget","correct","increaseScore","answer","Number","dataset","updatedClassNames","setState","showButton","render","answers","transition","transitionName","transitionEnterTimeout","transitionLeaveTimeout","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\nimport Icon from \"../images/icons/04.svg\";\nimport StatItem from \"../components/Stats/StatItem\";\n\nconst Items = [\n    { id: 1, icon: Icon, title: \"Gotowe fiszki do nauki\"},\n    { id: 2, icon: Icon, title: \"Tworzenie własnych fiszek\"},\n    { id: 3, icon: Icon, title: \"Platformę edukacyjną\"},\n    { id: 4, icon: Icon, title: \"Quizy oraz ranking\"}\n  ]\n\n  const Counts = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  margin-top: 2rem;\n  gap: 1rem;\n  flex: 1;\n`;\n\n\nclass Answers extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAnswered: false,\n            classNames: [\"\", \"\", \"\", \"\"]\n        }\n        \n        this.checkAnswer = this.checkAnswer.bind(this);\n    }\n    \n    checkAnswer(e) {\n        let { isAnswered } = this.props;\n        \n        if(!isAnswered) {\n            let elem = e.currentTarget;\n            let { correct, increaseScore } = this.props;\n            let answer = Number(elem.dataset.id);\n            let updatedClassNames = this.state.classNames;\n\n            if(answer === correct){\n                updatedClassNames[answer-1] = 'right';\n                increaseScore();\n            }\n            else {\n                updatedClassNames[answer-1] = 'wrong';\n            }\n            \n            this.setState({\n                classNames: updatedClassNames\n            })\n\n            this.props.showButton();\n        }\n    }\n    \n   \n    \n    render() {\n        let { answers } = this.props;\n        let { classNames } = this.state;\n        \n        let transition = {\n            transitionName: \"example\",\n            transitionEnterTimeout: 500,\n            transitionLeaveTimeout: 300\n        }\n        \n        return (\n         \n            <div id=\"answers\">\n                <Counts>\n                    {Items.map((item) => {\n                    return <StatItem key={item.id} item={item} />;\n                    })}\n                </Counts>\n                <ul>\n                    <li onClick={this.checkAnswer} className={classNames[0]} data-id=\"1\"><span>A</span> <p>{answers[0]}</p></li>\n                    <li onClick={this.checkAnswer} className={classNames[1]} data-id=\"2\"><span>B</span> <p>{answers[1]}</p></li>\n                    <li onClick={this.checkAnswer} className={classNames[2]} data-id=\"3\"><span>C</span> <p>{answers[2]}</p></li>\n                    <li onClick={this.checkAnswer} className={classNames[3]} data-id=\"4\"><span>D</span> <p>{answers[3]}</p></li>\n                </ul>\n            </div>\n   \n        );\n    }\n}\n\nexport default Answers"]},"metadata":{},"sourceType":"module"}