{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport { FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport authSlice from \"../assets/Pages/Auth\";\nconst rootReducer = combineReducers({\n  auth: authSlice.reducer\n});\nconst persistedReducer = persistReducer({\n  key: \"root\",\n  version: 1,\n  storage: storage\n}, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"sources":["/Users/aleksandrawerda/Desktop/fiszki-dla-niemych-5/react/src/store/index.js"],"names":["configureStore","getDefaultMiddleware","combineReducers","FLUSH","PAUSE","PERSIST","persistReducer","persistStore","PURGE","REGISTER","REHYDRATE","storage","authSlice","rootReducer","auth","reducer","persistedReducer","key","version","store","middleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SACEC,KADF,EAEEC,KAFF,EAGEC,OAHF,EAIEC,cAJF,EAKEC,YALF,EAMEC,KANF,EAOEC,QAPF,EAQEC,SARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,MAAMC,WAAW,GAAGX,eAAe,CAAC;AAClCY,EAAAA,IAAI,EAAEF,SAAS,CAACG;AADkB,CAAD,CAAnC;AAIA,MAAMC,gBAAgB,GAAGV,cAAc,CACrC;AACEW,EAAAA,GAAG,EAAE,MADP;AAEEC,EAAAA,OAAO,EAAE,CAFX;AAGEP,EAAAA,OAAO,EAAEA;AAHX,CADqC,EAMrCE,WANqC,CAAvC;AASA,MAAMM,KAAK,GAAGnB,cAAc,CAAC;AAC3Be,EAAAA,OAAO,EAAEC,gBADkB;AAE3BI,EAAAA,UAAU,EAAEnB,oBAAoB,CAAC;AAC/BoB,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAACnB,KAAD,EAAQO,SAAR,EAAmBN,KAAnB,EAA0BC,OAA1B,EAAmCG,KAAnC,EAA0CC,QAA1C;AADC;AADY,GAAD;AAFL,CAAD,CAA5B;AASA,OAAO,MAAMc,SAAS,GAAGhB,YAAY,CAACY,KAAD,CAA9B;AAGP,eAAeA,KAAf","sourcesContent":["import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport {\n  FLUSH,\n  PAUSE,\n  PERSIST,\n  persistReducer,\n  persistStore,\n  PURGE,\n  REGISTER,\n  REHYDRATE,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport authSlice from \"../assets/Pages/Auth\";\n\nconst rootReducer = combineReducers({\n  auth: authSlice.reducer,\n});\n\nconst persistedReducer = persistReducer(\n  {\n    key: \"root\",\n    version: 1,\n    storage: storage,\n  },\n  rootReducer\n);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default store;"]},"metadata":{},"sourceType":"module"}