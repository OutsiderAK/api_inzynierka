{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport { FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport authSlice from \"./Auth\";\nimport categoriesReducer from \"../Categories/CategoriesRedux\";\nconst rootReducer = combineReducers({\n  auth: authSlice.reducer,\n  privatecategories: categoriesReducer\n});\nconst persistedReducer = persistReducer({\n  key: \"root\",\n  version: 1,\n  storage: storage\n}, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"sources":["D:/D/uni/projekt/pr/fiszki-dla-niemych/react/src/assets/store/index.js"],"names":["configureStore","getDefaultMiddleware","combineReducers","FLUSH","PAUSE","PERSIST","persistReducer","persistStore","PURGE","REGISTER","REHYDRATE","storage","authSlice","categoriesReducer","rootReducer","auth","reducer","privatecategories","persistedReducer","key","version","store","middleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SACEC,KADF,EAEEC,KAFF,EAGEC,OAHF,EAIEC,cAJF,EAKEC,YALF,EAMEC,KANF,EAOEC,QAPF,EAQEC,SARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,SAAP,MAAsB,QAAtB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AAEA,MAAMC,WAAW,GAAGZ,eAAe,CAAC;AAClCa,EAAAA,IAAI,EAAEH,SAAS,CAACI,OADkB;AAElCC,EAAAA,iBAAiB,EAAEJ;AAFe,CAAD,CAAnC;AAKA,MAAMK,gBAAgB,GAAGZ,cAAc,CACrC;AACEa,EAAAA,GAAG,EAAE,MADP;AAEEC,EAAAA,OAAO,EAAE,CAFX;AAGET,EAAAA,OAAO,EAAEA;AAHX,CADqC,EAMrCG,WANqC,CAAvC;AASA,MAAMO,KAAK,GAAGrB,cAAc,CAAC;AAC3BgB,EAAAA,OAAO,EAAEE,gBADkB;AAE3BI,EAAAA,UAAU,EAAErB,oBAAoB,CAAC;AAC/BsB,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAACrB,KAAD,EAAQO,SAAR,EAAmBN,KAAnB,EAA0BC,OAA1B,EAAmCG,KAAnC,EAA0CC,QAA1C;AADC;AADY,GAAD;AAFL,CAAD,CAA5B;AASA,OAAO,MAAMgB,SAAS,GAAGlB,YAAY,CAACc,KAAD,CAA9B;AAGP,eAAeA,KAAf","sourcesContent":["import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  FLUSH,\r\n  PAUSE,\r\n  PERSIST,\r\n  persistReducer,\r\n  persistStore,\r\n  PURGE,\r\n  REGISTER,\r\n  REHYDRATE,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport authSlice from \"./Auth\";\r\nimport categoriesReducer from \"../Categories/CategoriesRedux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authSlice.reducer,\r\n  privatecategories: categoriesReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(\r\n  {\r\n    key: \"root\",\r\n    version: 1,\r\n    storage: storage,\r\n  },\r\n  rootReducer\r\n);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}