{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrawerda/Desktop/fiszki-dla-niemych/react/src/assets/Pages/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport styled from \"styled-components\";\nimport Button from \"../components/styled/Button.styled\";\nimport Input from \"../components/Inputs/Input\";\nimport H3 from \"../components/styled/H3.styled\";\nimport { Colors, TextStyles } from \"../Theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormSection = styled.div`\n\tpadding: 160px 0;\n`;\nconst AppEl = styled.div`\n  display: flex;\n  ustify-content: center;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 60vh;\n  width: 30vw;\n  background: rgba(255, 255, 255, 0.15);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(100rem);\n  -webkit-backdrop-filter: blur(100rem);\n  border-radius: 10px;\n  color: #ffffff;\n  text-transform: uppercase;\n  letter-spacing: 0.4rem;\n`;\nconst WelcomeText = styled(H3)`\n  margin: 4rem 0 4rem 0;\n  color: ${Colors.Brand.Text};\n`;\nconst InputContainer = styled.div`\n  row-gap: 1rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height: 20%;\n  width: 100%;\n  text-color: ${Colors.Brand.Text};\n`;\nconst ButtonContainer = styled.div`\n  margin: 3rem 0 2rem 0;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst UserForm = props => {\n  _s();\n\n  const [user, setUser] = useState(props.user);\n\n  const submit = e => {\n    e.preventDefault();\n    fetch('/api', {\n      method: 'POST',\n      body: JSON.stringify({\n        user\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(json => setUser(json.user));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"user[name]\",\n      value: user.name,\n      onChange: e => setUser({ ...user,\n        name: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), user.errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: user.errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"user[email]\",\n      value: user.email,\n      onChange: e => setUser({ ...user,\n        email: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), user.errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: user.errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      name: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserForm, \"AXmXfw8ndLSg1vp3rpeCJQdx3/4=\");\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["/Users/aleksandrawerda/Desktop/fiszki-dla-niemych/react/src/assets/Pages/Form.js"],"names":["React","Component","useState","styled","Button","Input","H3","Colors","TextStyles","FormSection","div","AppEl","WelcomeText","Brand","Text","InputContainer","ButtonContainer","UserForm","props","user","setUser","submit","e","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","json","name","target","value","errors","email"],"mappings":"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","sourcesContent":["import React, { Component, useState} from 'react';\nimport styled from \"styled-components\";\nimport Button from \"../components/styled/Button.styled\";\nimport Input from \"../components/Inputs/Input\";\nimport H3 from \"../components/styled/H3.styled\";\nimport { Colors, TextStyles } from \"../Theme\";\n\nconst FormSection = styled.div`\n\tpadding: 160px 0;\n`;\n\nconst AppEl = styled.div`\n  display: flex;\n  ustify-content: center;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 60vh;\n  width: 30vw;\n  background: rgba(255, 255, 255, 0.15);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(100rem);\n  -webkit-backdrop-filter: blur(100rem);\n  border-radius: 10px;\n  color: #ffffff;\n  text-transform: uppercase;\n  letter-spacing: 0.4rem;\n`;\n\nconst WelcomeText = styled(H3)`\n  margin: 4rem 0 4rem 0;\n  color: ${Colors.Brand.Text};\n`;\n\nconst InputContainer = styled.div`\n  row-gap: 1rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height: 20%;\n  width: 100%;\n  text-color: ${Colors.Brand.Text};\n`;\n\nconst ButtonContainer = styled.div`\n  margin: 3rem 0 2rem 0;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst UserForm = props => {\n  const [user, setUser] = useState(props.user)\n  \n  const submit = e => {\n    e.preventDefault()\n    fetch('/api', {\n      method: 'POST',\n      body: JSON.stringify({ user }),\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then(res => res.json())\n      .then(json => setUser(json.user))\n  }\n \n\n\n  return (\n    <form onSubmit={submit}>\n      <input\n        type=\"text\"\n        name=\"user[name]\"\n        value={user.name}\n        onChange={e => setUser({ ...user, name: e.target.value })}\n      />\n      {user.errors.name && <p>{user.errors.name}</p>}\n\n      <input\n        type=\"email\"\n        name=\"user[email]\"\n        value={user.email}\n        onChange={e => setUser({ ...user, email: e.target.value })}\n      />\n      {user.errors.name && <p>{user.errors.name}</p>}\n\n      <input type=\"submit\" name=\"Sign Up\" />\n    </form>\n  )\n}\n\nexport default UserForm;"]},"metadata":{},"sourceType":"module"}